const { Builder, Browser, By } = require('selenium-webdriver');
const BrowserType = Browser.CHROME;
const URL = 'https://market.yandex.ru/';
const SLEEP_TIME1 = 1000;
const SLEEP_TIME3 = 3000;
const SLEEP_TIME5 = 5000;
const SLEEP_TIME7 = 7000;

let driver = new Builder().forBrowser(BrowserType).build();

class MainPage {
    constructor(driver) {
        this.driver = driver;
        this.locator = {
            hamburger: By.xpath("//div[@data-zone-name='catalog']"),
            laptopsAndComputers: By.xpath("//span[contains(text(), '–ù–æ—É—Ç–±—É–∫–∏ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã')]"),
            internalHDD: By.xpath("//a[contains(text(), '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∂–µ—Å—Ç–∫–∏–µ –¥–∏—Å–∫–∏')]")
        }
    }

    async openURL() {
        await driver.get(URL);
        await driver.manage().window().maximize();
        console.log('‚úîÔ∏è  –ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ');
        await driver.sleep(SLEEP_TIME1);
    }

    async getInternalHDD() {
        await this.driver.findElement(this.locator.hamburger).click();
        await this.driver.sleep(SLEEP_TIME5);

        // –ù–∞–≤–µ—Å—Ç–∏ –Ω–∞ "–ù–æ—É—Ç–±—É–∫–∏ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã"
        let laptopsAndComputers = await this.driver.findElement(this.locator.laptopsAndComputers);
        let action = this.driver.actions({ async: true });
        await action.move({ origin: laptopsAndComputers }).perform();
        await this.driver.sleep(SLEEP_TIME1);

        // –ö–ª–∏–∫ –ø–æ "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∂–µ—Å—Ç–∫–∏–µ –¥–∏—Å–∫–∏"
        await this.driver.findElement(this.locator.internalHDD).click();
        console.log('‚úîÔ∏è  –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –∂–µ—Å—Ç–∫–∏–º–∏ –¥–∏—Å–∫–∞–º–∏');
        await this.driver.sleep(SLEEP_TIME3);
    }
}

class HDDPage {
    constructor(driver) {
        this.driver = driver;
        this.variables = {
            nameHDDs: [],
            priceHDDs: [],
        }
        this.locator = {
            getCheaper: By.xpath("//button[contains(text(), '–ø–æ–¥–µ—à–µ–≤–ª–µ')]"),
            getFiveNameHDDs: By.xpath("//div[@data-auto-themename='listDetailed']//h3[@data-auto='snippet-title']"),
            getFivePriceHDDs: By.xpath("//div[@data-auto-themename='listDetailed']//span[@data-auto='snippet-price-current']")
        }
    }

    async setThePrice() {
        await this.driver.findElement(this.locator.getCheaper).click();
        console.log('‚úîÔ∏è  –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ —Ü–µ–Ω–µ');
        await this.driver.sleep(SLEEP_TIME7);
    }

    // –°–∫—Ä–æ–ª–ª–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–¥–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    async scrollToLoadMore() {
        for (let i = 0; i < 3; i++) { // Scroll three times to load more items
            await this.driver.executeScript('window.scrollBy(0, 1000);');
            await this.driver.sleep(SLEEP_TIME3);
        }
    }

    async listHDDs() {
        await this.driver.sleep(SLEEP_TIME5);

        // –°–∫—Ä–æ–ª–ª–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–Ω–∏–∑ –¥–ª—è –ø–æ–¥–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
        await this.scrollToLoadMore();

        let nameElements = await this.driver.findElements(this.locator.getFiveNameHDDs);
        let priceElements = await this.driver.findElements(this.locator.getFivePriceHDDs);

        console.log('=====================');
        console.log('–°–ü–ò–°–û–ö –í–ù–£–¢–†–ï–ù–ù–ò–• –ñ–ï–°–¢–ö–ò–• –î–ò–°–ö–û–í:');
        
        // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –ø—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        for (let i = 0; i < Math.min(5, nameElements.length); i++) {
            this.variables.nameHDDs[i] = await nameElements[i].getText();
            this.variables.priceHDDs[i] = await priceElements[i].getText();
            console.log('------------------');
            console.log('üíª –ù–∞–∑–≤–∞–Ω–∏–µ: ' + this.variables.nameHDDs[i]);
            console.log('üí∞ –¶–µ–Ω–∞: ' + this.variables.priceHDDs[i] + ' —Ä—É–±–ª–µ–π');
        }
        
        console.log('=====================');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω –¥–ª—è –Ω–µ –º–µ–Ω–µ–µ —á–µ–º 10 —Ç–æ–≤–∞—Ä–æ–≤
        const prices = [];
        
        for (let i = 0; i < Math.min(10, priceElements.length); i++) {
            const priceText = await priceElements[i].getText();
            const priceValue = parseFloat(priceText.replace(/\s+/g, '').replace(/‚ÇΩ/, '')); // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã
            prices.push(priceValue);
            
            if (i > 0 && priceValue < prices[i - 1]) {
                console.error(`–û—à–∏–±–∫–∞: —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ ${this.variables.nameHDDs[i]} –º–µ–Ω—å—à–µ —Ü–µ–Ω—ã –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞.`);
                return;
            }
        }

        console.log('‚úîÔ∏è –í—Å–µ —Ü–µ–Ω—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
        
        console.log('=====================');
    }
}

describe('–í–∞—Ä–∏–∞–Ω—Ç ‚Ññ4', function () {
    this.timeout(100000);
    it('–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –∂–µ—Å—Ç–∫–∏–º–∏ –¥–∏—Å–∫–∞–º–∏', async function () {
        try {
            let mainPage = new MainPage(driver);
            await mainPage.openURL();
            await mainPage.getInternalHDD();
        } catch (err) {
            driver.takeScreenshot().then(function (image) {
                require('fs').writeFileSync('screenshot_error.png', image, 'base64');
            });
            console.error('–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: %s', err);
        }
    });
    
    it('–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∂–µ—Å—Ç–∫–∏—Ö –¥–∏—Å–∫–æ–≤ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞', async function () {
        try {
            let hddPage = new HDDPage(driver);
            await hddPage.setThePrice();
            await hddPage.listHDDs();
        } catch (err) {
            driver.takeScreenshot().then(function (image) {
                require('fs').writeFileSync('screenshot_error.png', image, 'base64');
            });
            console.error('–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: %s', err);
        }
    });

    after(async function () {
        await driver.quit();
    });
});